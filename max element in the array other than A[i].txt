Find the maximum element in the array other than Ai


import java.util.*;
public class ReplaceWithMax {
    
    // Function to find maximum element among (N - 1) elements other than a[i] for each i from 1 to N

    static void maxElement(int[] a, int n) {
        // To store prefix max element
        int[] pre = new int[n];
        pre[0] = a[0];
        for (int i = 1; i < n; i++) {
            pre[i] = Math.max(pre[i - 1], a[i]);
        }

        // To store suffix max element
        int[] suf = new int[n];
        suf[n - 1] = a[n - 1];
        for (int i = n - 2; i >= 0; i--) {
            suf[i] = Math.max(suf[i + 1], a[i]);
        }

        // Find the maximum element in the array other than a[i]
        for (int i = 0; i < n; i++) {
            if (i == 0) {
                System.out.print(suf[i + 1] + " ");
            } else if (i == n - 1) {
                System.out.print(pre[i - 1] + " ");
            } else {
                System.out.print(Math.max(pre[i - 1], suf[i + 1]) + " ");
            }
        }
    }

    // Driver code
    public static void main(String[] args) {
       Scanner sc = new Scanner(System.in);
        int n =sc.nextInt();
        int a[]  = new int[n];
         for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        maxElement(a, n);
    }
}


2nd way::
import java.util.Scanner;

public class ReplaceWithMax {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        // Input array size
        int n = sc.nextInt();
        int[] arr = new int[n];
        
        // Input array elements
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }
        
        // Find the maximum and second maximum elements
        int max = Integer.MIN_VALUE;
        int secondMax = Integer.MIN_VALUE;
        
        for (int i = 0; i < n; i++) {
            if (arr[i] > max) {
                secondMax = max;
                max = arr[i];
            } else if (arr[i] > secondMax && arr[i] != max) {
                secondMax = arr[i];
            }
        }
        
        // Replace elements
        for (int i = 0; i < n; i++) {
            if (arr[i] == max) {
                arr[i] = secondMax;
            } else {
                arr[i] = max;
            }
        }
        
        // Print the modified array
        for (int i = 0; i < n; i++) {
            System.out.print(arr[i] + " ");
        }
    }
}

